name: Release Mobile
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release-android:
    name: Tag, Build and Release Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm -w install --frozen-lockfile --filter ./apps/mobile

      - name: Validate versions
        run: |
          PKG_VERSION=$(node -p "require('./apps/mobile/package.json').version")
          APPJSON_VERSION=$(node -p "require('./apps/mobile/app.json').expo.version")
          echo "Detected versions -> package.json: $PKG_VERSION | app.json: $APPJSON_VERSION"
          if [ "$PKG_VERSION" != "$APPJSON_VERSION" ]; then
            echo "Error: apps/mobile/package.json version ($PKG_VERSION) does not match apps/mobile/app.json expo.version ($APPJSON_VERSION)." >&2
            exit 1
          fi
          echo "version=$PKG_VERSION" >> $GITHUB_OUTPUT
        id: validate

      - name: Create and push tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION=${{ steps.validate.outputs.version }}
          TAG="mobile-v${VERSION}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Download artifacts from Build Mobile workflow
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: build-mobile.yml
          workflow_conclusion: success
          branch: main
          name: mobile-artifacts
          path: ./downloaded-mobile

      - name: Find APK path
        id: find_apk
        run: |
          APK_PATH=$(find ./downloaded-mobile -type f -name "*.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "No APK found in downloaded artifacts" >&2
            exit 1
          fi
          echo "apk=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Create/Update GitHub Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          prerelease: false
          draft: false
          tag: mobile-v${{ steps.validate.outputs.version }}
          artifacts: ${{ steps.find_apk.outputs.apk }}
          artifactErrorsFailBuild: true
