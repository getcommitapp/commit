@startuml db-schema
title commit. - Database Schema
!theme plain
!pragma layout elk
left to right direction
hide circle
hide methods
hide stereotypes
skinparam linetype ortho
skinparam nodesep 90
skinparam ranksep 150
skinparam class {
  BackgroundColor White
  BorderColor Black
}

' SQLite must
entity "User" as user {
  + id: text [pk]
  --
  name: text
  email: text [unique]
  email_verified: boolean
  image: text
  created_at: timestamptz
  updated_at: timestamptz
}

' SQlite must
entity "Session" as session {
  + id: text [pk]
  --
  expires_at: timestamptz
  token: text [unique]
  created_at: timestamptz
  updated_at: timestamptz
  ip_address: text
  user_agent: text
  user_id: text [fk -> user.id]
}

' SQLite must
entity "Account" as account {
  + id: text [pk]
  --
  account_id: text
  provider_id: text
  user_id: text [fk -> user.id]
  access_token: text
  refresh_token: text
  id_token: text
  access_token_expires_at: timestamptz
  refresh_token_expires_at: timestamptz
  scope: text
  password: text
  created_at: timestamptz
  updated_at: timestamptz
}

' SQLite must
entity "Verification" as verification {
  + id: text [pk]
  --
  identifier: text
  value: text
  expires_at: timestamptz
  created_at: timestamptz
  updated_at: timestamptz
}

' Destinations
entity "Charity" as charity {
  + id: uuid [pk]
  --
  name: text
  url: text
  created_at: timestamptz
  updated_at: timestamptz
}

' Base goal
entity "Goal" as goal {
  + id: uuid [pk]
  --
  owner_id: text [fk -> user.id]
  name: text
  description: text
  start_date: timestamptz
  end_date: timestamptz
  due_start_time: timestamptz
  due_end_time: timestamptz
  recurrence: jsonb
  stake_cents: int
  currency: text
  destination_type: text
  destination_user_id: text [fk -> user.id] ' (nullable)
  destination_charity_id: uuid [fk -> charities.id] ' (nullable)
  created_at: timestamptz
  updated_at: timestamptz
}

' Evidence Method
entity "Goal_verifications_method" as goal_verifications_method {
  + id: uuid [pk]
  --
  goal_id: uuid [fk -> goals.id]
  method: text
  latitude: numeric
  longitude: numeric
  radius_m: int
  duration_seconds: int
  grace_time: timestamptz
  created_at: timestamptz
  updated_at: timestamptz
}

' Evidence Log
entity "Goal_verifications_log" as goal_verifications_log {
  + id: uuid [pk]
  --
  goal_id: uuid [fk -> goals.id]
  user_id: uuid [fk -> user.id]
  type: text
  verified_at: timestamptz
  approval_status: text
  approved_by: uuid  ' fk -> user.id (nullable)
  start_time: timestamptz
  photo_description: text
  photo_url: text
  created_at: timestamptz
  updated_at: timestamptz
}

' Group challenges
entity "Group" as group {
  + id: uuid [pk]
  --
  creator_id: text [fk -> user.id]
  goal_id: uuid  ' fk -> goals.id (nullable)
  name: text
  description: text
  code_invite: text
  created_at: timestamptz
  updated_at: timestamptz
}

entity "Group_participants" as group_participants {
  + group_id: uuid [fk -> groups.id]
  + user_id: uuid [fk -> user.id]
  --
  joined_at: timestamptz
  status: text
  created_at: timestamptz
  updated_at: timestamptz
}

' Relationships
user ||--o{ goal : owns
user ||--o{ goal_verifications_log : submits
user ||--o{ group : creates
user ||--o{ group_participants : participates
user ||--o{ session : has
user ||--o{ account : linked

charity ||--o{ goal : destination

goal ||--o{ goal_verifications_method : has
goal ||--o{ goal_verifications_log : rules
goal ||--o{ group : spawns

group ||--o{ group_participants : has

@enduml

